plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.7'
    id 'io.spring.dependency-management' version '1.1.6'
    id "org.sonarqube" version "5.0.0.4638"

}

group = 'org'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

<<<<<<< HEAD
sonar {
    properties {
        property "sonar.projectKey", "olivesafety_project_efbec061-da18-440a-816b-b1866d669bd2"
        property "sonar.projectName", "project"
    }
}

=======
>>>>>>> e421642 (cors)
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.springframework.security:spring-security-test'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    //dynamodb
    //implementation 'org.springframework.boot:spring-boot-starter-data-dynamodb'
    //implementation 'com.amazonaws:aws-java-sdk-dynamodb'

    //jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
}

jar {
    enabled = false
}

bootJar {
    archiveBaseName.set('oliveSafety')
    archiveVersion.set('0.0.1-SNAPSHOT')
}


tasks.named('test') {
    useJUnitPlatform()
}
